<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat with AI Career Advisor</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            background-size: 400% 400%;
            animation: gradientFlow 15s ease infinite;
            height: 100vh;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        @keyframes gradientFlow {
            0% { background-position: 0% 50%; }
            25% { background-position: 100% 50%; }
            50% { background-position: 100% 100%; }
            75% { background-position: 0% 100%; }
            100% { background-position: 0% 50%; }
        }

        /* Floating particles background */
        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .particle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            animation: particleFloat 20s infinite linear;
        }

        @keyframes particleFloat {
            0% {
                transform: translateY(100vh) translateX(0px) rotate(0deg);
                opacity: 0;
            }
            10% {
                opacity: 1;
            }
            90% {
                opacity: 1;
            }
            100% {
                transform: translateY(-100vh) translateX(100px) rotate(360deg);
                opacity: 0;
            }
        }

        .chat-header {
            background: rgba(255,255,255,0.15);
            padding: 1.5rem;
            text-align: center;
            color: white;
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
            animation: slideInDown 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            z-index: 10;
            position: relative;
        }

        @keyframes slideInDown {
            0% {
                transform: translateY(-100px);
                opacity: 0;
            }
            100% {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .chat-header h1 {
            font-size: 2rem;
            margin-bottom: 0.5rem;
            background: linear-gradient(45deg, #ffffff, #f0f0f0);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            animation: textGlow 3s ease-in-out infinite alternate;
        }

        @keyframes textGlow {
            0% { text-shadow: 0 0 20px rgba(255, 255, 255, 0.5); }
            100% { text-shadow: 0 0 30px rgba(255, 255, 255, 0.8); }
        }

        .chat-header p {
            opacity: 0.9;
            font-size: 1.1rem;
            animation: fadeInUp 1s ease 0.3s both;
        }

        @keyframes fadeInUp {
            0% {
                transform: translateY(20px);
                opacity: 0;
            }
            100% {
                transform: translateY(0);
                opacity: 0.9;
            }
        }

        .chat-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            max-width: 900px;
            margin: 2rem auto;
            width: calc(100% - 2rem);
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 25px;
            box-shadow: 0 25px 80px rgba(0,0,0,0.2);
            overflow: hidden;
            animation: scaleIn 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.2s both;
            position: relative;
            z-index: 10;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        @keyframes scaleIn {
            0% {
                transform: scale(0.8) translateY(50px);
                opacity: 0;
            }
            100% {
                transform: scale(1) translateY(0);
                opacity: 1;
            }
        }

        .chat-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05));
            pointer-events: none;
            z-index: -1;
        }

        .messages-container {
            flex: 1;
            overflow-y: auto;
            padding: 2rem;
            background: rgba(248, 249, 250, 0.8);
            backdrop-filter: blur(10px);
            position: relative;
        }

        /* Enhanced scrollbar */
        .messages-container::-webkit-scrollbar {
            width: 8px;
        }

        .messages-container::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
        }

        .messages-container::-webkit-scrollbar-thumb {
            background: linear-gradient(45deg, #667eea, #764ba2);
            border-radius: 10px;
            transition: background 0.3s ease;
        }

        .messages-container::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(45deg, #5a6fd8, #6a42a0);
        }

        .message {
            margin-bottom: 1.5rem;
            display: flex;
            gap: 0.5rem;
            animation: messageSlideIn 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            opacity: 0;
            animation-fill-mode: both;
        }

        @keyframes messageSlideIn {
            0% {
                transform: translateY(30px) scale(0.9);
                opacity: 0;
            }
            100% {
                transform: translateY(0) scale(1);
                opacity: 1;
            }
        }

        .message.user {
            justify-content: flex-end;
            animation-name: messageSlideInRight;
        }

        @keyframes messageSlideInRight {
            0% {
                transform: translateX(30px) translateY(20px) scale(0.9);
                opacity: 0;
            }
            100% {
                transform: translateX(0) translateY(0) scale(1);
                opacity: 1;
            }
        }

        .message-bubble {
            max-width: 75%;
            padding: 1rem 1.5rem;
            border-radius: 25px;
            line-height: 1.6;
            font-size: 1rem;
            position: relative;
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .message-bubble:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);
        }

        .message.user .message-bubble {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-bottom-right-radius: 8px;
            position: relative;
            overflow: hidden;
        }

        .message.user .message-bubble::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.8s ease;
        }

        .message.user .message-bubble:hover::before {
            left: 100%;
        }

        .message.assistant .message-bubble {
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border: 2px solid rgba(102, 126, 234, 0.1);
            border-bottom-left-radius: 8px;
            color: #333;
            position: relative;
            overflow: hidden;
        }

        .message.assistant .message-bubble::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.02), transparent);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .message.assistant .message-bubble:hover::after {
            opacity: 1;
        }

        .input-container {
            display: flex;
            padding: 1.5rem;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-top: 1px solid rgba(102, 126, 234, 0.1);
            gap: 1rem;
            align-items: flex-end;
            animation: slideInUp 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.4s both;
        }

        @keyframes slideInUp {
            0% {
                transform: translateY(50px);
                opacity: 0;
            }
            100% {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .message-input {
            flex: 1;
            padding: 1rem 1.5rem;
            border: 2px solid rgba(102, 126, 234, 0.2);
            border-radius: 25px;
            font-size: 1rem;
            outline: none;
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            resize: none;
            min-height: 50px;
            max-height: 120px;
            font-family: inherit;
        }

        .message-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 25px rgba(102, 126, 234, 0.3);
            transform: scale(1.02);
            background: rgba(255, 255, 255, 1);
        }

        .message-input::placeholder {
            color: rgba(102, 126, 234, 0.6);
            transition: color 0.3s ease;
        }

        .message-input:focus::placeholder {
            color: rgba(102, 126, 234, 0.4);
        }

        .send-button {
            padding: 1rem 2rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
            position: relative;
            overflow: hidden;
            min-width: 100px;
        }

        .send-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            transition: left 0.6s ease;
        }

        .send-button:hover:not(:disabled) {
            transform: translateY(-3px) scale(1.05);
            box-shadow: 0 15px 40px rgba(102, 126, 234, 0.4);
        }

        .send-button:hover:not(:disabled)::before {
            left: 100%;
        }

        .send-button:active:not(:disabled) {
            transform: translateY(-1px) scale(1.02);
        }

        .send-button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.2);
        }

        .typing-indicator {
            display: none;
            padding: 1rem 1.5rem;
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border: 2px solid rgba(102, 126, 234, 0.1);
            border-radius: 25px;
            border-bottom-left-radius: 8px;
            max-width: 75%;
            margin-bottom: 1.5rem;
            animation: typingSlideIn 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        @keyframes typingSlideIn {
            0% {
                transform: translateY(20px) scale(0.9);
                opacity: 0;
            }
            100% {
                transform: translateY(0) scale(1);
                opacity: 1;
            }
        }

        .typing-dots {
            display: flex;
            gap: 6px;
            align-items: center;
        }

        .typing-dots span {
            width: 10px;
            height: 10px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            border-radius: 50%;
            animation: typingBounce 1.4s infinite ease-in-out;
            box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
        }

        .typing-dots span:nth-child(2) {
            animation-delay: 0.2s;
        }

        .typing-dots span:nth-child(3) {
            animation-delay: 0.4s;
        }

        @keyframes typingBounce {
            0%, 60%, 100% { 
                transform: translateY(0) scale(1); 
                opacity: 0.7;
            }
            30% { 
                transform: translateY(-12px) scale(1.1); 
                opacity: 1;
            }
        }

        .welcome-message {
            text-align: center;
            padding: 3rem 2rem;
            color: #666;
            animation: welcomeIn 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.6s both;
        }

        @keyframes welcomeIn {
            0% {
                transform: translateY(30px) scale(0.9);
                opacity: 0;
            }
            100% {
                transform: translateY(0) scale(1);
                opacity: 1;
            }
        }

        .welcome-message h3 {
            font-size: 2rem;
            margin-bottom: 1rem;
            background: linear-gradient(45deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .welcome-message p {
            font-size: 1.2rem;
            line-height: 1.6;
            max-width: 600px;
            margin: 0 auto;
        }

        .quick-starters {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            padding: 0 2rem 2rem;
            justify-content: center;
            animation: startersIn 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.8s both;
        }

        @keyframes startersIn {
            0% {
                transform: translateY(20px);
                opacity: 0;
            }
            100% {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .quick-starter {
            padding: 0.8rem 1.5rem;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            border: 2px solid rgba(102, 126, 234, 0.2);
            border-radius: 25px;
            cursor: pointer;
            font-size: 0.95rem;
            font-weight: 500;
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
        }

        .quick-starter::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            opacity: 0;
            transition: opacity 0.4s ease;
            z-index: -1;
        }

        .quick-starter:hover {
            color: white;
            transform: translateY(-5px) scale(1.05);
            box-shadow: 0 15px 35px rgba(102, 126, 234, 0.3);
            border-color: transparent;
        }

        .quick-starter:hover::before {
            opacity: 1;
        }

        .quick-starter:active {
            transform: translateY(-2px) scale(1.02);
        }

        /* Enhanced focus states for accessibility */
        .message-input:focus,
        .send-button:focus,
        .quick-starter:focus {
            outline: 3px solid rgba(102, 126, 234, 0.4);
            outline-offset: 2px;
        }

        /* Responsive design improvements */
        @media (max-width: 768px) {
            .chat-container {
                margin: 1rem;
                width: calc(100% - 2rem);
                border-radius: 20px;
            }

            .message-bubble {
                max-width: 85%;
                padding: 0.8rem 1.2rem;
                font-size: 0.95rem;
            }
            
            .input-container {
                padding: 1rem;
                gap: 0.8rem;
            }

            .message-input {
                padding: 0.8rem 1.2rem;
                font-size: 0.95rem;
            }

            .send-button {
                padding: 0.8rem 1.5rem;
                font-size: 0.95rem;
                min-width: 80px;
            }

            .quick-starters {
                padding: 0 1rem 1.5rem;
                gap: 0.8rem;
            }

            .quick-starter {
                padding: 0.7rem 1.2rem;
                font-size: 0.9rem;
            }

            .chat-header h1 {
                font-size: 1.6rem;
            }

            .welcome-message {
                padding: 2rem 1rem;
            }

            .welcome-message h3 {
                font-size: 1.6rem;
            }

            .welcome-message p {
                font-size: 1.1rem;
            }
        }

        @media (max-width: 480px) {
            .chat-container {
                margin: 0.5rem;
                width: calc(100% - 1rem);
            }

            .messages-container {
                padding: 1.5rem;
            }

            .quick-starters {
                flex-direction: column;
                align-items: center;
            }

            .quick-starter {
                width: 100%;
                max-width: 300px;
                text-align: center;
            }
        }

        /* Smooth scroll behavior */
        .messages-container {
            scroll-behavior: smooth;
        }

        /* Loading state for messages */
        .message.loading {
            opacity: 0.7;
            animation: pulse 1.5s ease-in-out infinite;
        }

        @keyframes pulse {
            0%, 100% { opacity: 0.7; }
            50% { opacity: 0.9; }
        }
    </style>
</head>
<body>
    <!-- Animated particles background -->
    <div class="particles" id="particles"></div>

    <div class="chat-header">
        <h1>💬 Chat with AI Career Advisor</h1>
        <p>Ask me anything about careers, get personalized advice, or just chat!</p>
    </div>

    <div class="chat-container">
        <div class="messages-container" id="messages">
            <div class="welcome-message">
                <h3>👋 Hi there!</h3>
                <p>I'm your AI career advisor. Ask me anything about careers, share your interests, or let's just chat about your goals!</p>
            </div>
        </div>

        <div class="quick-starters">
            <div class="quick-starter" onclick="sendQuickMessage('Tell me about careers in technology')">💻 Tech Careers</div>
            <div class="quick-starter" onclick="sendQuickMessage('I love helping people, what careers fit?')">🤝 Helping People</div>
            <div class="quick-starter" onclick="sendQuickMessage('What are some creative career options?')">🎨 Creative Careers</div>
            <div class="quick-starter" onclick="sendQuickMessage('I want to start my own business')">🚀 Entrepreneurship</div>
        </div>

        <div class="input-container">
            <textarea 
                class="message-input" 
                id="messageInput" 
                placeholder="Ask me about careers or just say hi..."
                onkeypress="handleKeyPress(event)"
                rows="1"
            ></textarea>
            <button class="send-button" onclick="sendMessage()" id="sendButton">
                Send
            </button>
        </div>

        <div class="typing-indicator" id="typingIndicator">
            <div class="typing-dots">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </div>
    </div>

    <script>
        let conversationHistory = [];
        let messageCounter = 0;
        
        // Create animated particles
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            const particleCount = 30;
            
            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 20 + 's';
                particle.style.animationDuration = (15 + Math.random() * 10) + 's';
                particlesContainer.appendChild(particle);
            }
        }

        // Auto-resize textarea
        function autoResizeTextarea() {
            const textarea = document.getElementById('messageInput');
            textarea.style.height = 'auto';
            textarea.style.height = Math.min(textarea.scrollHeight, 120) + 'px';
        }

        // Handle enter key press
        function handleKeyPress(event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault();
                sendMessage();
            }
        }
        
        // Send quick message
        function sendQuickMessage(message) {
            document.getElementById('messageInput').value = message;
            sendMessage();
        }

        // Add message with enhanced animations
        function addMessage(text, sender) {
            const messagesContainer = document.getElementById('messages');
            
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sender}`;
            messageDiv.style.animationDelay = '0.1s';
            
            const bubbleDiv = document.createElement('div');
            bubbleDiv.className = 'message-bubble';
            bubbleDiv.textContent = text;
            
            messageDiv.appendChild(bubbleDiv);
            messagesContainer.appendChild(messageDiv);
            
            // Remove welcome message after first interaction
            const welcomeMessage = messagesContainer.querySelector('.welcome-message');
            if (welcomeMessage && messageCounter > 0) {
                welcomeMessage.style.animation = 'fadeOut 0.5s ease forwards';
                setTimeout(() => {
                    if (welcomeMessage.parentNode) {
                        welcomeMessage.remove();
                    }
                }, 500);
            }
            
            messageCounter++;
            
            // Smooth scroll to bottom
            setTimeout(() => {
                messagesContainer.scrollTo({
                    top: messagesContainer.scrollHeight,
                    behavior: 'smooth'
                });
            }, 100);
        }

        // Enhanced send message function
        async function sendMessage() {
            const input = document.getElementById('messageInput');
            const sendButton = document.getElementById('sendButton');
            const messagesContainer = document.getElementById('messages');
            const typingIndicator = document.getElementById('typingIndicator');
            
            const message = input.value.trim();
            if (!message) return;

            // Disable input while processing
            input.disabled = true;
            sendButton.disabled = true;
            
            // Add user message with animation
            addMessage(message, 'user');
            
            // Clear input and reset height
            input.value = '';
            input.style.height = 'auto';
            
            // Show typing indicator with animation
            typingIndicator.style.display = 'block';
            setTimeout(() => {
                messagesContainer.scrollTo({
                    top: messagesContainer.scrollHeight,
                    behavior: 'smooth'
                });
            }, 100);
            
            try {
                // REAL API CALL - Replace the placeholder with this
                const response = await fetch('/api/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ 
                        message: message,
                        conversationHistory: conversationHistory
                    })
                });
                
                const data = await response.json();
                
                // Hide typing indicator
                typingIndicator.style.display = 'none';
                
                // Add assistant message
                setTimeout(() => {
                    addMessage(data.response, 'assistant');
                }, 200);
                
                // Update conversation history
                conversationHistory.push(
                    { role: 'user', content: message },
                    { role: 'assistant', content: data.response }
                );
                
                // Keep only last 10 messages in history
                if (conversationHistory.length > 10) {
                    conversationHistory = conversationHistory.slice(-10);
                }
                
            } catch (error) {
                typingIndicator.style.display = 'none';
                addMessage('Sorry, I had trouble processing that. Please try again!', 'assistant');
            }
            
            // Re-enable input with smooth transition
            setTimeout(() => {
                input.disabled = false;
                sendButton.disabled = false;
                input.focus();
            }, 300);
        }
        
        // Initialize when page loads
        document.addEventListener('DOMContentLoaded', function() {
            createParticles();
            
            const messageInput = document.getElementById('messageInput');
            messageInput.focus();
            
            // Add input event for auto-resize
            messageInput.addEventListener('input', autoResizeTextarea);
            
            // Add fade out animation for welcome message removal
            const style = document.createElement('style');
            style.textContent = `
                @keyframes fadeOut {
                    0% { opacity: 1; transform: scale(1); }
                    100% { opacity: 0; transform: scale(0.9); }
                }
            `;
            document.head.appendChild(style);
        });
    </script>
</body>
</html>